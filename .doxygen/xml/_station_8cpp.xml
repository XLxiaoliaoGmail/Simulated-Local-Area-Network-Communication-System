<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="_station_8cpp" kind="file" language="C++">
    <compoundname>Station.cpp</compoundname>
    <includes refid="__common_8h" local="yes">../include/_common.h</includes>
    <incdepgraph>
      <node id="17">
        <label>Channel.h</label>
        <link refid="_channel_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>Device.h</label>
        <link refid="_device_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>Environment.h</label>
        <link refid="_environment_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>Message.h</label>
        <link refid="_message_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>ProtocolDevice.h</label>
        <link refid="_protocol_device_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>Robot.h</label>
        <link refid="_robot_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>Server.h</label>
        <link refid="_server_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>SimEvent.h</label>
        <link refid="_sim_event_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>Station.h</label>
        <link refid="_station_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>../include/_common.h</label>
        <link refid="__common_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/Station.cpp</label>
        <link refid="_station_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>cstdint</label>
      </node>
      <node id="12">
        <label>format</label>
      </node>
      <node id="6">
        <label>functional</label>
      </node>
      <node id="11">
        <label>iomanip</label>
      </node>
      <node id="9">
        <label>iostream</label>
      </node>
      <node id="13">
        <label>list</label>
      </node>
      <node id="5">
        <label>queue</label>
      </node>
      <node id="3">
        <label>random</label>
      </node>
      <node id="14">
        <label>sstream</label>
      </node>
      <node id="10">
        <label>string</label>
      </node>
      <node id="8">
        <label>unordered_map</label>
      </node>
      <node id="7">
        <label>vector</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="__common_8h" kindref="compound">../include/_common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"><ref refid="class_station_1a9781dc4c4717fa7f3880c6e8051bd68f" kindref="member">Station::Station</ref>(<ref refid="__common_8h_1ace694e2135c52226445db7abe85136b5" kindref="member">ADDR_TYPEDEF</ref><sp/>addr,<sp/><ref refid="class_environment" kindref="compound">Environment</ref>*<sp/>en,<sp/><ref refid="__common_8h_1affbae0dfdb59a8bb112e3b264b61e612" kindref="member">POSITION_UNIT_TYPEDEF</ref><sp/>x,<sp/><ref refid="__common_8h_1affbae0dfdb59a8bb112e3b264b61e612" kindref="member">POSITION_UNIT_TYPEDEF</ref><sp/>y)<sp/>:<sp/></highlight></codeline>
<codeline lineno="4"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_protocol_device" kindref="compound">ProtocolDevice</ref>(addr,<sp/>en),<sp/></highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/><sp/><sp/>occupied(false),<sp/></highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/>x(x),</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/>y(y),</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/>chargingBotAddr(<ref refid="__common_8h_1a165bf20bde62d8f191b040f639b6c646" kindref="member">NOWHERE_ADDR</ref>)<sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;setOnWaitingChanged([</highlight><highlight class="keyword">this</highlight><highlight class="normal">](</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>waiting){</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(waiting)<sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;log(</highlight><highlight class="stringliteral">&quot;Channel<sp/>occupied,<sp/>wiating<sp/>...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;log(</highlight><highlight class="stringliteral">&quot;Message<sp/>sent&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="16"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_station_1a2898b77556eb45cc99a69802a25ffb4c" kindref="member">Station::login</ref>(std::string<sp/>loginKey)<sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_station_1ad61f3530485792bb90ede98fd3468df0" kindref="member">sendToServer</ref>(<ref refid="__common_8h_1a4d47dc9870566f2f294eaab1426094a2ad7c30a6308907c98724172a40af8aa28" kindref="member">MsgType::X_SERVER_LOGIN</ref>,<sp/>loginKey,<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">](<ref refid="__common_8h_1ace694e2135c52226445db7abe85136b5" kindref="member">ADDR_TYPEDEF</ref><sp/>senderAddr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;<sp/>payload){</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(senderAddr<sp/>!=<sp/><ref refid="__common_8h_1aca1da29b9fc52e8a6b8ab5007ea96094" kindref="member">SERVER_ADDR</ref>)<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;loginSuccess<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_station_1a5e9e7306431b60b151ce7a3ee8d5dd0c" kindref="member">log</ref>(</highlight><highlight class="stringliteral">&quot;Login<sp/>succecssfully&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_station_1aae013d77b9ddc54d2291327cc85cc6b2" kindref="member">updateFreeToServer</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_station_1aef4881fbd46e090ff84bc58984bf906b" kindref="member">updatePositionToServer</ref>();</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>msg<sp/>listener</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_protocol_device_1a1ac42bba860be61ca6867ff7f9978b1a" kindref="member">on</ref>(<ref refid="__common_8h_1a4d47dc9870566f2f294eaab1426094a2a1276d6b711d193551618ce871208ff7b" kindref="member">MsgType::SERVER_X_CHARGE_HANDSHAKE_INFO</ref>,<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">](<ref refid="__common_8h_1ace694e2135c52226445db7abe85136b5" kindref="member">ADDR_TYPEDEF</ref><sp/>senderAddr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;<sp/>payload){</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>handshakeKey<sp/>=<sp/>payload;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>listen<sp/>to<sp/>handshake<sp/>from<sp/>bot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_station_1a5e9e7306431b60b151ce7a3ee8d5dd0c" kindref="member">log</ref>(</highlight><highlight class="stringliteral">&quot;Listen<sp/>for<sp/>handshakeKey:&quot;</highlight><highlight class="normal"><sp/>+<sp/>handshakeKey);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_protocol_device_1a201e9643176a39facc54e6e00bc8cd44" kindref="member">once</ref>(</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="__common_8h_1a4d47dc9870566f2f294eaab1426094a2abbaf8b8150872302b1af366bc73de72d" kindref="member">MsgType::BOT_STATION_CHARGE_HANDSHAKE</ref>,<sp/></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>handshakeKey](<ref refid="__common_8h_1ace694e2135c52226445db7abe85136b5" kindref="member">ADDR_TYPEDEF</ref><sp/>senderAddr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;<sp/>payload){</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(handshakeKey<sp/>==<sp/>payload){</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_station_1a5e9e7306431b60b151ce7a3ee8d5dd0c" kindref="member">log</ref>(</highlight><highlight class="stringliteral">&quot;Handshake<sp/>successfully<sp/>with<sp/>bot:&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="class_message_1acef8afa3edec9aeb7a0b6db49a982b09" kindref="member">Message::addrToHexString</ref>(senderAddr));</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_station_1af3c6a6095fa84a46aa7549a82d1932ad" kindref="member">setOccupied</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_protocol_device_1ac8e76689b597199de9732533a9e18f0d" kindref="member">send</ref>(</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="__common_8h_1a4d47dc9870566f2f294eaab1426094a2abbaf8b8150872302b1af366bc73de72d" kindref="member">MsgType::BOT_STATION_CHARGE_HANDSHAKE</ref>,</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="__common_8h_1a2613ee6d05b5cba11f09e606795cd290" kindref="member">MSG_STATUS_TRUE</ref>,</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="__common_8h_1a8b1944035d810f3f3cf017c396d47f36" kindref="member">MAIN_CHANNEL</ref>,</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>senderAddr</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;chargingBotAddr<sp/>=<sp/>senderAddr;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_device_1a25112960d14acd64e7f1b8388af1e132" kindref="member">error</ref>(</highlight><highlight class="stringliteral">&quot;Handshake<sp/>error&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_protocol_device_1a1ac42bba860be61ca6867ff7f9978b1a" kindref="member">on</ref>(<ref refid="__common_8h_1a4d47dc9870566f2f294eaab1426094a2ae78c27ecc3248e0d1545895c60be4e33" kindref="member">MsgType::BOT_STATION_CHARGE_KEEPALIVE</ref>,<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">](<ref refid="__common_8h_1ace694e2135c52226445db7abe85136b5" kindref="member">ADDR_TYPEDEF</ref><sp/>senderAddr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;<sp/>payload){</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(this-&gt;chargingBotAddr<sp/>==<sp/><ref refid="__common_8h_1a165bf20bde62d8f191b040f639b6c646" kindref="member">NOWHERE_ADDR</ref>){</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(senderAddr<sp/>!=<sp/>this-&gt;chargingBotAddr){</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_device_1a25112960d14acd64e7f1b8388af1e132" kindref="member">error</ref>(</highlight><highlight class="stringliteral">&quot;senderAddr<sp/>!=<sp/>this-&gt;chargingBotAddr&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(payload<sp/>==<sp/><ref refid="__common_8h_1a2613ee6d05b5cba11f09e606795cd290" kindref="member">MSG_STATUS_TRUE</ref>){</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>keep<sp/>alive</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_protocol_device_1ac8e76689b597199de9732533a9e18f0d" kindref="member">send</ref>(</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="__common_8h_1a4d47dc9870566f2f294eaab1426094a2ae78c27ecc3248e0d1545895c60be4e33" kindref="member">MsgType::BOT_STATION_CHARGE_KEEPALIVE</ref>,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="__common_8h_1a2613ee6d05b5cba11f09e606795cd290" kindref="member">MSG_STATUS_TRUE</ref>,</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="__common_8h_1a8b1944035d810f3f3cf017c396d47f36" kindref="member">MAIN_CHANNEL</ref>,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>senderAddr</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_station_1a5e9e7306431b60b151ce7a3ee8d5dd0c" kindref="member">log</ref>(</highlight><highlight class="stringliteral">&quot;Recieve<sp/>keep<sp/>alive&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(payload<sp/>==<sp/><ref refid="__common_8h_1a45b255f514efd9fd05884bd9846d38c0" kindref="member">MSG_STATUS_FALSE</ref>){</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>stop<sp/>charging</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;chargingBotAddr<sp/>=<sp/><ref refid="__common_8h_1a165bf20bde62d8f191b040f639b6c646" kindref="member">NOWHERE_ADDR</ref>;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_station_1a5e9e7306431b60b151ce7a3ee8d5dd0c" kindref="member">log</ref>(</highlight><highlight class="stringliteral">&quot;Recieve<sp/>stop<sp/>charging&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_station_1af3c6a6095fa84a46aa7549a82d1932ad" kindref="member">setOccupied</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_station_1a5e9e7306431b60b151ce7a3ee8d5dd0c" kindref="member">log</ref>(</highlight><highlight class="stringliteral">&quot;Try<sp/>to<sp/>send<sp/>X_SERVER_LOGIN&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_station_1aae013d77b9ddc54d2291327cc85cc6b2" kindref="member">Station::updateFreeToServer</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>free)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_station_1ad61f3530485792bb90ede98fd3468df0" kindref="member">sendToServer</ref>(<ref refid="__common_8h_1a4d47dc9870566f2f294eaab1426094a2afd2266159d735cfec3feb60feff8c7a0" kindref="member">MsgType::STATION_SERVER_FREE_UPDATE</ref>,<sp/>free?<ref refid="__common_8h_1a2613ee6d05b5cba11f09e606795cd290" kindref="member">MSG_STATUS_TRUE</ref>:<ref refid="__common_8h_1a45b255f514efd9fd05884bd9846d38c0" kindref="member">MSG_STATUS_FALSE</ref>,<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>free](<ref refid="__common_8h_1ace694e2135c52226445db7abe85136b5" kindref="member">ADDR_TYPEDEF</ref><sp/>senderAddr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;<sp/>payload){</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(senderAddr<sp/>!=<sp/><ref refid="__common_8h_1aca1da29b9fc52e8a6b8ab5007ea96094" kindref="member">SERVER_ADDR</ref>)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(payload<sp/>==<sp/><ref refid="__common_8h_1a2613ee6d05b5cba11f09e606795cd290" kindref="member">MSG_STATUS_TRUE</ref>){</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_station_1a5e9e7306431b60b151ce7a3ee8d5dd0c" kindref="member">log</ref>(</highlight><highlight class="stringliteral">&quot;Update<sp/>status<sp/>to<sp/>server<sp/>succecssfully,<sp/>current<sp/>status:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::string(free?</highlight><highlight class="stringliteral">&quot;free&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;occupied&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>error<sp/>handler</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_station_1a5e9e7306431b60b151ce7a3ee8d5dd0c" kindref="member">log</ref>(</highlight><highlight class="stringliteral">&quot;Try<sp/>to<sp/>send<sp/>STATION_SERVER_FREE_UPDATE&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="92"><highlight class="normal">}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_station_1aef4881fbd46e090ff84bc58984bf906b" kindref="member">Station::updatePositionToServer</ref>()<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_station_1ad61f3530485792bb90ede98fd3468df0" kindref="member">sendToServer</ref>(</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="__common_8h_1a4d47dc9870566f2f294eaab1426094a2aabf3d31dcc16a157b60b20431f9e0d57" kindref="member">MsgType::STATION_SERVER_POSITION_UPDATE</ref>,<sp/></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_message_1a8c47dd59151ba19519761672702380a3" kindref="member">Message::positionToHexString</ref>(this-&gt;x,<sp/>this-&gt;y),<sp/></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">](<ref refid="__common_8h_1ace694e2135c52226445db7abe85136b5" kindref="member">ADDR_TYPEDEF</ref><sp/>senderAddr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;<sp/>payload){</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(senderAddr<sp/>!=<sp/><ref refid="__common_8h_1aca1da29b9fc52e8a6b8ab5007ea96094" kindref="member">SERVER_ADDR</ref>)<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(payload<sp/>==<sp/><ref refid="__common_8h_1a2613ee6d05b5cba11f09e606795cd290" kindref="member">MSG_STATUS_TRUE</ref>){</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_station_1a5e9e7306431b60b151ce7a3ee8d5dd0c" kindref="member">log</ref>(</highlight><highlight class="stringliteral">&quot;Update<sp/>position<sp/>to<sp/>server<sp/>succecssfully,<sp/>current<sp/>position:<sp/>x[&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="class_message_1a9d268d0b21202ac751c9b4306890465e" kindref="member">Message::uintToHexString</ref>(this-&gt;<ref refid="class_station_1aa171db72c2471720b3d1fe30dfec5a36" kindref="member">getX</ref>(),<sp/><ref refid="__common_8h_1ade6ddc39f62a688999ddb3a8009e0903" kindref="member">POSITION_UNIT_FORMAT_LENGTH</ref>)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;]<sp/>y[&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="class_message_1a9d268d0b21202ac751c9b4306890465e" kindref="member">Message::uintToHexString</ref>(this-&gt;<ref refid="class_station_1a4a6eefeff825559f5ef8310446170b90" kindref="member">getY</ref>(),<sp/><ref refid="__common_8h_1ade6ddc39f62a688999ddb3a8009e0903" kindref="member">POSITION_UNIT_FORMAT_LENGTH</ref>)<sp/>+</highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>error<sp/>handler</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_station_1a5e9e7306431b60b151ce7a3ee8d5dd0c" kindref="member">log</ref>(</highlight><highlight class="stringliteral">&quot;Try<sp/>to<sp/>send<sp/>STATION_SERVER_POSITION_UPDATE&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="109"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/Station.cpp"/>
  </compounddef>
</doxygen>
