<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="class_protocol_device" kind="class" language="C++" prot="public">
    <compoundname>ProtocolDevice</compoundname>
    <basecompoundref refid="class_device" prot="public" virt="non-virtual">Device</basecompoundref>
    <derivedcompoundref refid="class_robot" prot="public" virt="non-virtual">Robot</derivedcompoundref>
    <derivedcompoundref refid="class_server" prot="public" virt="non-virtual">Server</derivedcompoundref>
    <derivedcompoundref refid="class_station" prot="public" virt="non-virtual">Station</derivedcompoundref>
    <includes refid="_protocol_device_8h" local="no">ProtocolDevice.h</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_protocol_device_1a312a2dee62340677bba57fd5c1433334" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; <ref refid="__common_8h_1a4d47dc9870566f2f294eaab1426094a2" kindref="member">MsgType</ref>, std::function&lt; void(<ref refid="__common_8h_1ace694e2135c52226445db7abe85136b5" kindref="member">ADDR_TYPEDEF</ref>, const std::string &amp;)&gt; &gt;</type>
        <definition>std::unordered_map&lt;MsgType, std::function&lt;void(ADDR_TYPEDEF, const std::string&amp;)&gt; &gt; ProtocolDevice::callbacks</definition>
        <argsstring></argsstring>
        <name>callbacks</name>
        <qualifiedname>ProtocolDevice::callbacks</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ProtocolDevice.h" line="8" column="24" bodyfile="include/ProtocolDevice.h" bodystart="8" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_protocol_device_1a63b5319cccc31ce77f4782955d0dfe9b" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; <ref refid="__common_8h_1a4d47dc9870566f2f294eaab1426094a2" kindref="member">MsgType</ref>, std::function&lt; void(<ref refid="__common_8h_1ace694e2135c52226445db7abe85136b5" kindref="member">ADDR_TYPEDEF</ref>, const std::string &amp;)&gt; &gt;</type>
        <definition>std::unordered_map&lt;MsgType, std::function&lt;void(ADDR_TYPEDEF, const std::string&amp;)&gt; &gt; ProtocolDevice::onceCallbacks</definition>
        <argsstring></argsstring>
        <name>onceCallbacks</name>
        <qualifiedname>ProtocolDevice::onceCallbacks</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ProtocolDevice.h" line="9" column="24" bodyfile="include/ProtocolDevice.h" bodystart="9" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_protocol_device_1a86fe6dd895e9d31cb02f25aedeec4517" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ProtocolDevice::ProtocolDevice</definition>
        <argsstring>(ADDR_TYPEDEF addr, Environment *en)</argsstring>
        <name>ProtocolDevice</name>
        <qualifiedname>ProtocolDevice::ProtocolDevice</qualifiedname>
        <param>
          <type><ref refid="__common_8h_1ace694e2135c52226445db7abe85136b5" kindref="member">ADDR_TYPEDEF</ref></type>
          <declname>addr</declname>
        </param>
        <param>
          <type><ref refid="class_environment" kindref="compound">Environment</ref> *</type>
          <declname>en</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ProtocolDevice.h" line="11" column="14" bodyfile="include/ProtocolDevice.h" bodystart="11" bodyend="11"/>
      </memberdef>
      <memberdef kind="function" id="class_protocol_device_1ad4878a8e00eb38999144ea75b28b5015" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string ProtocolDevice::formatKeyStr</definition>
        <argsstring>(const std::string &amp;key)</argsstring>
        <name>formatKeyStr</name>
        <qualifiedname>ProtocolDevice::formatKeyStr</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ProtocolDevice.h" line="12" column="17" bodyfile="include/ProtocolDevice.h" bodystart="12" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="class_protocol_device_1aa0da4767b6297edc518c84b9cc296e93" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string ProtocolDevice::MsgTypeToHexString</definition>
        <argsstring>(MsgType num)</argsstring>
        <name>MsgTypeToHexString</name>
        <qualifiedname>ProtocolDevice::MsgTypeToHexString</qualifiedname>
        <param>
          <type><ref refid="__common_8h_1a4d47dc9870566f2f294eaab1426094a2" kindref="member">MsgType</ref></type>
          <declname>num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ProtocolDevice.h" line="21" column="17" bodyfile="include/ProtocolDevice.h" bodystart="21" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="class_protocol_device_1a7716806817011df76d855f30cf3f2b23" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="__common_8h_1a4d47dc9870566f2f294eaab1426094a2" kindref="member">MsgType</ref></type>
        <definition>MsgType ProtocolDevice::hexStringToMsgType</definition>
        <argsstring>(const std::string &amp;hexStr)</argsstring>
        <name>hexStringToMsgType</name>
        <qualifiedname>ProtocolDevice::hexStringToMsgType</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>hexStr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ProtocolDevice.h" line="27" column="20" bodyfile="include/ProtocolDevice.h" bodystart="27" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="class_protocol_device_1ac8e76689b597199de9732533a9e18f0d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ProtocolDevice::send</definition>
        <argsstring>(MsgType type, const std::string payload, CHANNEL_INDEX_TYPEDEF channelIndex, ADDR_TYPEDEF target)</argsstring>
        <name>send</name>
        <qualifiedname>ProtocolDevice::send</qualifiedname>
        <param>
          <type><ref refid="__common_8h_1a4d47dc9870566f2f294eaab1426094a2" kindref="member">MsgType</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>const std::string</type>
          <declname>payload</declname>
        </param>
        <param>
          <type><ref refid="__common_8h_1a9635220f023976d87c59d9234b98f11f" kindref="member">CHANNEL_INDEX_TYPEDEF</ref></type>
          <declname>channelIndex</declname>
        </param>
        <param>
          <type><ref refid="__common_8h_1ace694e2135c52226445db7abe85136b5" kindref="member">ADDR_TYPEDEF</ref></type>
          <declname>target</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ProtocolDevice.h" line="30" column="17" bodyfile="include/ProtocolDevice.h" bodystart="30" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="class_protocol_device_1af611022232cd75f5a381a3249680c073" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ProtocolDevice::send</definition>
        <argsstring>(MsgType type, CHANNEL_INDEX_TYPEDEF channelIndex, ADDR_TYPEDEF target)</argsstring>
        <name>send</name>
        <qualifiedname>ProtocolDevice::send</qualifiedname>
        <param>
          <type><ref refid="__common_8h_1a4d47dc9870566f2f294eaab1426094a2" kindref="member">MsgType</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="__common_8h_1a9635220f023976d87c59d9234b98f11f" kindref="member">CHANNEL_INDEX_TYPEDEF</ref></type>
          <declname>channelIndex</declname>
        </param>
        <param>
          <type><ref refid="__common_8h_1ace694e2135c52226445db7abe85136b5" kindref="member">ADDR_TYPEDEF</ref></type>
          <declname>target</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ProtocolDevice.h" line="33" column="17" bodyfile="include/ProtocolDevice.h" bodystart="33" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="class_protocol_device_1ae7a3396842456d09c8d99adcbbb8b33f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ProtocolDevice::send</definition>
        <argsstring>(MsgType type, const std::string payload, CHANNEL_INDEX_TYPEDEF channelIndex, ADDR_TYPEDEF target, std::function&lt; void(ADDR_TYPEDEF, const std::string &amp;)&gt; callback)</argsstring>
        <name>send</name>
        <qualifiedname>ProtocolDevice::send</qualifiedname>
        <param>
          <type><ref refid="__common_8h_1a4d47dc9870566f2f294eaab1426094a2" kindref="member">MsgType</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>const std::string</type>
          <declname>payload</declname>
        </param>
        <param>
          <type><ref refid="__common_8h_1a9635220f023976d87c59d9234b98f11f" kindref="member">CHANNEL_INDEX_TYPEDEF</ref></type>
          <declname>channelIndex</declname>
        </param>
        <param>
          <type><ref refid="__common_8h_1ace694e2135c52226445db7abe85136b5" kindref="member">ADDR_TYPEDEF</ref></type>
          <declname>target</declname>
        </param>
        <param>
          <type>std::function&lt; void(<ref refid="__common_8h_1ace694e2135c52226445db7abe85136b5" kindref="member">ADDR_TYPEDEF</ref>, const std::string &amp;)&gt;</type>
          <declname>callback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ProtocolDevice.h" line="36" column="17" bodyfile="include/ProtocolDevice.h" bodystart="36" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="class_protocol_device_1a6b00e2e8334f0184b9930a388de9ce0e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ProtocolDevice::send</definition>
        <argsstring>(MsgType type, CHANNEL_INDEX_TYPEDEF channelIndex, ADDR_TYPEDEF target, std::function&lt; void(ADDR_TYPEDEF, const std::string &amp;)&gt; callback)</argsstring>
        <name>send</name>
        <qualifiedname>ProtocolDevice::send</qualifiedname>
        <param>
          <type><ref refid="__common_8h_1a4d47dc9870566f2f294eaab1426094a2" kindref="member">MsgType</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="__common_8h_1a9635220f023976d87c59d9234b98f11f" kindref="member">CHANNEL_INDEX_TYPEDEF</ref></type>
          <declname>channelIndex</declname>
        </param>
        <param>
          <type><ref refid="__common_8h_1ace694e2135c52226445db7abe85136b5" kindref="member">ADDR_TYPEDEF</ref></type>
          <declname>target</declname>
        </param>
        <param>
          <type>std::function&lt; void(<ref refid="__common_8h_1ace694e2135c52226445db7abe85136b5" kindref="member">ADDR_TYPEDEF</ref>, const std::string &amp;)&gt;</type>
          <declname>callback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ProtocolDevice.h" line="40" column="17" bodyfile="include/ProtocolDevice.h" bodystart="40" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="class_protocol_device_1a1ac42bba860be61ca6867ff7f9978b1a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ProtocolDevice::on</definition>
        <argsstring>(MsgType type, std::function&lt; void(ADDR_TYPEDEF, const std::string &amp;)&gt; callback)</argsstring>
        <name>on</name>
        <qualifiedname>ProtocolDevice::on</qualifiedname>
        <param>
          <type><ref refid="__common_8h_1a4d47dc9870566f2f294eaab1426094a2" kindref="member">MsgType</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>std::function&lt; void(<ref refid="__common_8h_1ace694e2135c52226445db7abe85136b5" kindref="member">ADDR_TYPEDEF</ref>, const std::string &amp;)&gt;</type>
          <declname>callback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ProtocolDevice.h" line="44" column="17" bodyfile="include/ProtocolDevice.h" bodystart="44" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="class_protocol_device_1a201e9643176a39facc54e6e00bc8cd44" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ProtocolDevice::once</definition>
        <argsstring>(MsgType type, std::function&lt; void(ADDR_TYPEDEF, const std::string &amp;)&gt; callback)</argsstring>
        <name>once</name>
        <qualifiedname>ProtocolDevice::once</qualifiedname>
        <param>
          <type><ref refid="__common_8h_1a4d47dc9870566f2f294eaab1426094a2" kindref="member">MsgType</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>std::function&lt; void(<ref refid="__common_8h_1ace694e2135c52226445db7abe85136b5" kindref="member">ADDR_TYPEDEF</ref>, const std::string &amp;)&gt;</type>
          <declname>callback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ProtocolDevice.h" line="47" column="17" bodyfile="include/ProtocolDevice.h" bodystart="47" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="class_protocol_device_1ab499901dbec84769ab86d6eb99d418ea" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ProtocolDevice::msgHandler</definition>
        <argsstring>(ADDR_TYPEDEF senderAddr, MsgType type, const std::string &amp;payload)</argsstring>
        <name>msgHandler</name>
        <qualifiedname>ProtocolDevice::msgHandler</qualifiedname>
        <param>
          <type><ref refid="__common_8h_1ace694e2135c52226445db7abe85136b5" kindref="member">ADDR_TYPEDEF</ref></type>
          <declname>senderAddr</declname>
        </param>
        <param>
          <type><ref refid="__common_8h_1a4d47dc9870566f2f294eaab1426094a2" kindref="member">MsgType</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>payload</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ProtocolDevice.h" line="50" column="17" bodyfile="include/ProtocolDevice.h" bodystart="50" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="class_protocol_device_1a1f54fd7c5d99d865446e670080838fba" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void ProtocolDevice::recieve</definition>
        <argsstring>(const Message *msg, CHANNEL_INDEX_TYPEDEF channelIndex) override</argsstring>
        <name>recieve</name>
        <qualifiedname>ProtocolDevice::recieve</qualifiedname>
        <reimplements refid="class_device_1adb6173df7a804fef6dc7a8254927defa">recieve</reimplements>
        <param>
          <type>const <ref refid="class_message" kindref="compound">Message</ref> *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type><ref refid="__common_8h_1a9635220f023976d87c59d9234b98f11f" kindref="member">CHANNEL_INDEX_TYPEDEF</ref></type>
          <declname>channelIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ProtocolDevice.h" line="59" column="17" bodyfile="include/ProtocolDevice.h" bodystart="59" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="class_protocol_device_1a54848a94b7290bc42b846be899758e41" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ProtocolDevice::log</definition>
        <argsstring>(const std::string &amp;who, const std::string &amp;log)</argsstring>
        <name>log</name>
        <qualifiedname>ProtocolDevice::log</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>who</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>log</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/ProtocolDevice.h" line="66" column="17" bodyfile="include/ProtocolDevice.h" bodystart="66" bodyend="68"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>Device</label>
        <link refid="class_device"/>
      </node>
      <node id="1">
        <label>ProtocolDevice</label>
        <link refid="class_protocol_device"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>Robot</label>
        <link refid="class_robot"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>Server</label>
        <link refid="class_server"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>Station</label>
        <link refid="class_station"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>Device</label>
        <link refid="class_device"/>
      </node>
      <node id="1">
        <label>ProtocolDevice</label>
        <link refid="class_protocol_device"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/ProtocolDevice.h" line="6" column="1" bodyfile="include/ProtocolDevice.h" bodystart="6" bodyend="69"/>
    <listofallmembers>
      <member refid="class_protocol_device_1a312a2dee62340677bba57fd5c1433334" prot="private" virt="non-virtual"><scope>ProtocolDevice</scope><name>callbacks</name></member>
      <member refid="class_device_1a534415da35664d5a9ff6fcf043029e84" prot="public" virt="non-virtual"><scope>ProtocolDevice</scope><name>Device</name></member>
      <member refid="class_device_1a25112960d14acd64e7f1b8388af1e132" prot="public" virt="non-virtual"><scope>ProtocolDevice</scope><name>error</name></member>
      <member refid="class_protocol_device_1ad4878a8e00eb38999144ea75b28b5015" prot="public" virt="non-virtual"><scope>ProtocolDevice</scope><name>formatKeyStr</name></member>
      <member refid="class_device_1a9e924a4fac8366d76f2aa661bf8d3dac" prot="public" virt="non-virtual"><scope>ProtocolDevice</scope><name>getAddr</name></member>
      <member refid="class_protocol_device_1a7716806817011df76d855f30cf3f2b23" prot="public" virt="non-virtual"><scope>ProtocolDevice</scope><name>hexStringToMsgType</name></member>
      <member refid="class_device_1a996cfa9dad7ff28bcd6ca50ce41b1f53" prot="public" virt="non-virtual"><scope>ProtocolDevice</scope><name>listenTo</name></member>
      <member refid="class_protocol_device_1a54848a94b7290bc42b846be899758e41" prot="public" virt="non-virtual"><scope>ProtocolDevice</scope><name>log</name></member>
      <member refid="class_device_1a02a4dcfb2be69394026033da9c0e0614" prot="protected" virt="non-virtual" ambiguityscope="Device::"><scope>ProtocolDevice</scope><name>log</name></member>
      <member refid="class_protocol_device_1ab499901dbec84769ab86d6eb99d418ea" prot="public" virt="non-virtual"><scope>ProtocolDevice</scope><name>msgHandler</name></member>
      <member refid="class_protocol_device_1aa0da4767b6297edc518c84b9cc296e93" prot="public" virt="non-virtual"><scope>ProtocolDevice</scope><name>MsgTypeToHexString</name></member>
      <member refid="class_protocol_device_1a1ac42bba860be61ca6867ff7f9978b1a" prot="public" virt="non-virtual"><scope>ProtocolDevice</scope><name>on</name></member>
      <member refid="class_protocol_device_1a201e9643176a39facc54e6e00bc8cd44" prot="public" virt="non-virtual"><scope>ProtocolDevice</scope><name>once</name></member>
      <member refid="class_protocol_device_1a63b5319cccc31ce77f4782955d0dfe9b" prot="private" virt="non-virtual"><scope>ProtocolDevice</scope><name>onceCallbacks</name></member>
      <member refid="class_protocol_device_1a86fe6dd895e9d31cb02f25aedeec4517" prot="public" virt="non-virtual"><scope>ProtocolDevice</scope><name>ProtocolDevice</name></member>
      <member refid="class_protocol_device_1a1f54fd7c5d99d865446e670080838fba" prot="public" virt="virtual"><scope>ProtocolDevice</scope><name>recieve</name></member>
      <member refid="class_protocol_device_1ac8e76689b597199de9732533a9e18f0d" prot="public" virt="non-virtual"><scope>ProtocolDevice</scope><name>send</name></member>
      <member refid="class_protocol_device_1af611022232cd75f5a381a3249680c073" prot="public" virt="non-virtual"><scope>ProtocolDevice</scope><name>send</name></member>
      <member refid="class_protocol_device_1ae7a3396842456d09c8d99adcbbb8b33f" prot="public" virt="non-virtual"><scope>ProtocolDevice</scope><name>send</name></member>
      <member refid="class_protocol_device_1a6b00e2e8334f0184b9930a388de9ce0e" prot="public" virt="non-virtual"><scope>ProtocolDevice</scope><name>send</name></member>
      <member refid="class_device_1a00e1d363811ad74a7267211440045246" prot="protected" virt="non-virtual" ambiguityscope="Device::"><scope>ProtocolDevice</scope><name>send</name></member>
      <member refid="class_device_1aa77235051cbb8db5bdeb55acbf92c439" prot="public" virt="non-virtual"><scope>ProtocolDevice</scope><name>setBusy</name></member>
      <member refid="class_device_1a10a65f15883b944469d65cb775d35a7e" prot="public" virt="non-virtual"><scope>ProtocolDevice</scope><name>setLogEnable</name></member>
      <member refid="class_device_1a2c7928822cfb7b6f85980a51b8f94b12" prot="public" virt="non-virtual"><scope>ProtocolDevice</scope><name>setOnBusyChanged</name></member>
      <member refid="class_device_1aed2179d42305c3053d3f99bfe1af92b4" prot="public" virt="non-virtual"><scope>ProtocolDevice</scope><name>setOnWaitingChanged</name></member>
      <member refid="class_device_1a68a3860b803cff4e2c46fbdda9577428" prot="public" virt="non-virtual"><scope>ProtocolDevice</scope><name>setWaiting</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
