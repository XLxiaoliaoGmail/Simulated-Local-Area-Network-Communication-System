<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="_server_8h" kind="file" language="C++">
    <compoundname>Server.h</compoundname>
    <includes refid="__common_8h" local="yes">_common.h</includes>
    <includedby refid="__common_8h" local="yes">include/_common.h</includedby>
    <incdepgraph>
      <node id="17">
        <label>Channel.h</label>
        <link refid="_channel_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>Device.h</label>
        <link refid="_device_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>Environment.h</label>
        <link refid="_environment_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>Message.h</label>
        <link refid="_message_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>ProtocolDevice.h</label>
        <link refid="_protocol_device_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>Robot.h</label>
        <link refid="_robot_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>include/Server.h</label>
        <link refid="_server_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>SimEvent.h</label>
        <link refid="_sim_event_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>Station.h</label>
        <link refid="_station_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>_common.h</label>
        <link refid="__common_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="1" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>cstdint</label>
      </node>
      <node id="12">
        <label>format</label>
      </node>
      <node id="6">
        <label>functional</label>
      </node>
      <node id="11">
        <label>iomanip</label>
      </node>
      <node id="9">
        <label>iostream</label>
      </node>
      <node id="13">
        <label>list</label>
      </node>
      <node id="5">
        <label>queue</label>
      </node>
      <node id="3">
        <label>random</label>
      </node>
      <node id="14">
        <label>sstream</label>
      </node>
      <node id="10">
        <label>string</label>
      </node>
      <node id="8">
        <label>unordered_map</label>
      </node>
      <node id="7">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>include/Channel.h</label>
        <link refid="_channel_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>include/Device.h</label>
        <link refid="_device_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>include/Environment.h</label>
        <link refid="_environment_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>include/Message.h</label>
        <link refid="_message_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>include/ProtocolDevice.h</label>
        <link refid="_protocol_device_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>include/Robot.h</label>
        <link refid="_robot_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>include/Server.h</label>
        <link refid="_server_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>include/SimEvent.h</label>
        <link refid="_sim_event_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>include/Station.h</label>
        <link refid="_station_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>include/_common.h</label>
        <link refid="__common_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>src/Channel.cpp</label>
        <link refid="_channel_8cpp"/>
      </node>
      <node id="12">
        <label>src/Device.cpp</label>
        <link refid="_device_8cpp"/>
      </node>
      <node id="13">
        <label>src/Environment.cpp</label>
        <link refid="_environment_8cpp"/>
      </node>
      <node id="14">
        <label>src/Robot.cpp</label>
        <link refid="_robot_8cpp"/>
      </node>
      <node id="15">
        <label>src/Server.cpp</label>
        <link refid="_server_8cpp"/>
      </node>
      <node id="16">
        <label>src/SimEvent.cpp</label>
        <link refid="_sim_event_8cpp"/>
      </node>
      <node id="17">
        <label>src/Station.cpp</label>
        <link refid="_station_8cpp"/>
      </node>
      <node id="18">
        <label>src/main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_robot_data" prot="public">RobotData</innerclass>
    <innerclass refid="struct_station_data" prot="public">StationData</innerclass>
    <innerclass refid="class_server" prot="public">Server</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#if<sp/>!defined(__SERVER_H)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__SERVER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="__common_8h" kindref="compound">_common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6" refid="struct_robot_data" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_robot_data" kindref="compound">RobotData</ref><sp/>{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8" refid="struct_robot_data_1a0007f4b014a950d356d2d63156b572af" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="struct_robot_data_1a0007f4b014a950d356d2d63156b572af" kindref="member">RobotData</ref>(){}</highlight></codeline>
<codeline lineno="9"><highlight class="normal">};</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="struct_station_data" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_station_data" kindref="compound">StationData</ref><sp/>{</highlight></codeline>
<codeline lineno="12" refid="struct_station_data_1a0a2865baaeb6b7e48d5cfd6f1ba78f58" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="__common_8h_1ace694e2135c52226445db7abe85136b5" kindref="member">ADDR_TYPEDEF</ref><sp/><ref refid="struct_station_data_1a0a2865baaeb6b7e48d5cfd6f1ba78f58" kindref="member">addr</ref>;</highlight></codeline>
<codeline lineno="13" refid="struct_station_data_1ad7be5eb9da812dd11274f9a9a4f4cf5f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_station_data_1ad7be5eb9da812dd11274f9a9a4f4cf5f" kindref="member">free</ref>;</highlight></codeline>
<codeline lineno="14" refid="struct_station_data_1a578b66c3a3d771447a5553ba4ed7bfc6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="__common_8h_1affbae0dfdb59a8bb112e3b264b61e612" kindref="member">POSITION_UNIT_TYPEDEF</ref><sp/><ref refid="struct_station_data_1a578b66c3a3d771447a5553ba4ed7bfc6" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="15" refid="struct_station_data_1a33a06bfb92e429730c71b4bc89299205" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="__common_8h_1affbae0dfdb59a8bb112e3b264b61e612" kindref="member">POSITION_UNIT_TYPEDEF</ref><sp/><ref refid="struct_station_data_1a33a06bfb92e429730c71b4bc89299205" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="16" refid="struct_station_data_1a07804cb95111bbbb828cc8964950f417" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="struct_station_data_1a07804cb95111bbbb828cc8964950f417" kindref="member">StationData</ref>(<ref refid="__common_8h_1ace694e2135c52226445db7abe85136b5" kindref="member">ADDR_TYPEDEF</ref><sp/><ref refid="struct_station_data_1a0a2865baaeb6b7e48d5cfd6f1ba78f58" kindref="member">addr</ref>)<sp/>:<sp/><ref refid="struct_station_data_1a0a2865baaeb6b7e48d5cfd6f1ba78f58" kindref="member">addr</ref>(<ref refid="struct_station_data_1a0a2865baaeb6b7e48d5cfd6f1ba78f58" kindref="member">addr</ref>),<sp/><ref refid="struct_station_data_1ad7be5eb9da812dd11274f9a9a4f4cf5f" kindref="member">free</ref>(false)<sp/>{}</highlight></codeline>
<codeline lineno="17"><highlight class="normal">};</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="class_server" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_server" kindref="compound">Server</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_protocol_device" kindref="compound">ProtocolDevice</ref><sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unordered_map&lt;ADDR_TYPEDEF,<sp/>RobotData*&gt;<sp/>robotsInfo;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unordered_map&lt;ADDR_TYPEDEF,<sp/>StationData*&gt;<sp/>stationsInfo;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>robotLoginKey;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>stationLoginKey;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_server_1a7f8fbb3f78926eba5ca1552bf3481830" kindref="member">Server</ref>(<ref refid="__common_8h_1ace694e2135c52226445db7abe85136b5" kindref="member">ADDR_TYPEDEF</ref><sp/>addr,<sp/><ref refid="class_environment" kindref="compound">Environment</ref>*<sp/>en);</highlight></codeline>
<codeline lineno="28" refid="class_server_1a2acad211a3a98c6c08db2a4f3df9c184" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_server_1a2acad211a3a98c6c08db2a4f3df9c184" kindref="member">isRobot</ref>(<ref refid="__common_8h_1ace694e2135c52226445db7abe85136b5" kindref="member">ADDR_TYPEDEF</ref><sp/>addr){</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;robotsInfo.count(addr)<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="31" refid="class_server_1a0b51c982917606fcdf3dfa620fcd3247" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_server_1a0b51c982917606fcdf3dfa620fcd3247" kindref="member">isStation</ref>(<ref refid="__common_8h_1ace694e2135c52226445db7abe85136b5" kindref="member">ADDR_TYPEDEF</ref><sp/>addr){</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;stationsInfo.count(addr)<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_station_data" kindref="compound">StationData</ref>*<sp/><ref refid="class_server_1a629a67198cf2a17f0d59131312eb7e26" kindref="member">getFreeStation</ref>();</highlight></codeline>
<codeline lineno="35" refid="class_server_1aec2c8a08fe665a31d1ac62d502a73d7f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_server_1aec2c8a08fe665a31d1ac62d502a73d7f" kindref="member">setStationStatus</ref>(<ref refid="__common_8h_1ace694e2135c52226445db7abe85136b5" kindref="member">ADDR_TYPEDEF</ref><sp/>addr,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>free)<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(this-&gt;stationsInfo.count(addr)<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;stationsInfo[addr]-&gt;free<sp/>=<sp/>free;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="41" refid="class_server_1a67c294d571d4c0fc45a797606940e2c3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_server_1a67c294d571d4c0fc45a797606940e2c3" kindref="member">setRobotLoginKey</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>key){<sp/></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;robotLoginKey<sp/>=<sp/>this-&gt;<ref refid="class_protocol_device_1ad4878a8e00eb38999144ea75b28b5015" kindref="member">formatKeyStr</ref>(key);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_server_1a766d13d11edb006fdf256928a3d7aa3b" kindref="member">log</ref>(</highlight><highlight class="stringliteral">&quot;Set<sp/>up<sp/>robot<sp/>login<sp/>key<sp/>successfully,<sp/>key:&quot;</highlight><highlight class="normal"><sp/>+<sp/>key)<sp/>;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="45" refid="class_server_1a04646e818326caa845257aeaa6a2b127" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_server_1a04646e818326caa845257aeaa6a2b127" kindref="member">setStationLoginKey</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>key){<sp/></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;stationLoginKey<sp/>=<sp/>this-&gt;<ref refid="class_protocol_device_1ad4878a8e00eb38999144ea75b28b5015" kindref="member">formatKeyStr</ref>(key);<sp/></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_server_1a766d13d11edb006fdf256928a3d7aa3b" kindref="member">log</ref>(</highlight><highlight class="stringliteral">&quot;Set<sp/>up<sp/>station<sp/>login<sp/>key<sp/>successfully,<sp/>key:&quot;</highlight><highlight class="normal"><sp/>+<sp/>key)<sp/>;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="49" refid="class_server_1a6ea296e311b8156d4dcbded0807484db" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_server_1a6ea296e311b8156d4dcbded0807484db" kindref="member">addRobotAddr</ref>(<ref refid="__common_8h_1ace694e2135c52226445db7abe85136b5" kindref="member">ADDR_TYPEDEF</ref><sp/>addr){<sp/></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;robotsInfo[addr]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_robot_data" kindref="compound">RobotData</ref>();<sp/></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52" refid="class_server_1a9bf195783d3c2a70c5b92fdb7ea4339d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_server_1a9bf195783d3c2a70c5b92fdb7ea4339d" kindref="member">addStationAddr</ref>(<ref refid="__common_8h_1ace694e2135c52226445db7abe85136b5" kindref="member">ADDR_TYPEDEF</ref><sp/>addr){<sp/></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;stationsInfo[addr]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_station_data" kindref="compound">StationData</ref>(addr);<sp/></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55" refid="class_server_1a33bd24089bb8edb7edba8119a2377d35" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_server_1a33bd24089bb8edb7edba8119a2377d35" kindref="member">listenTo</ref>(<ref refid="__common_8h_1a9635220f023976d87c59d9234b98f11f" kindref="member">CHANNEL_INDEX_TYPEDEF</ref><sp/>channelIndex)<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_device_1a996cfa9dad7ff28bcd6ca50ce41b1f53" kindref="member">Device::listenTo</ref>(channelIndex);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_server_1a766d13d11edb006fdf256928a3d7aa3b" kindref="member">log</ref>(</highlight><highlight class="stringliteral">&quot;Listen<sp/>to<sp/>Channel[&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(channelIndex)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59" refid="class_server_1a766d13d11edb006fdf256928a3d7aa3b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_server_1a766d13d11edb006fdf256928a3d7aa3b" kindref="member">log</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="class_server_1a766d13d11edb006fdf256928a3d7aa3b" kindref="member">log</ref>)<sp/>{<sp/><ref refid="class_protocol_device_1a54848a94b7290bc42b846be899758e41" kindref="member">ProtocolDevice::log</ref>(</highlight><highlight class="stringliteral">&quot;Server&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_server_1a766d13d11edb006fdf256928a3d7aa3b" kindref="member">log</ref>);<sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal">};</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>__SERVER_H</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="include/Server.h"/>
  </compounddef>
</doxygen>
