<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="class_robot" kind="class" language="C++" prot="public">
    <compoundname>Robot</compoundname>
    <basecompoundref refid="class_protocol_device" prot="public" virt="non-virtual">ProtocolDevice</basecompoundref>
    <includes refid="_robot_8h" local="no">Robot.h</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_robot_1a83ba4297407dba276a37e9036cb72d84" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Robot::needCharging</definition>
        <argsstring></argsstring>
        <name>needCharging</name>
        <qualifiedname>Robot::needCharging</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Robot.h" line="8" column="10" bodyfile="include/Robot.h" bodystart="8" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_robot_1a0119d7e9803d19e659f0c5e60fbb47ce" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Robot::loginSuccess</definition>
        <argsstring></argsstring>
        <name>loginSuccess</name>
        <qualifiedname>Robot::loginSuccess</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Robot.h" line="9" column="10" bodyfile="include/Robot.h" bodystart="9" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_robot_1a95d34c931fd70353dabb301045cb8cd8" prot="private" static="no" mutable="no">
        <type><ref refid="__common_8h_1ac90ccc37e41cdc297ad40132bdde4bdf" kindref="member">POWER_TYPEDEF</ref></type>
        <definition>POWER_TYPEDEF Robot::power</definition>
        <argsstring></argsstring>
        <name>power</name>
        <qualifiedname>Robot::power</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Robot.h" line="10" column="19" bodyfile="include/Robot.h" bodystart="10" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_robot_1a525741287f163490ba22534f12166c69" prot="private" static="no" mutable="no">
        <type><ref refid="__common_8h_1ace694e2135c52226445db7abe85136b5" kindref="member">ADDR_TYPEDEF</ref></type>
        <definition>ADDR_TYPEDEF Robot::chargingStationAddr</definition>
        <argsstring></argsstring>
        <name>chargingStationAddr</name>
        <qualifiedname>Robot::chargingStationAddr</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Robot.h" line="11" column="18" bodyfile="include/Robot.h" bodystart="11" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_robot_1a5b96001154c6eeca6c7e546da8d1a009" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>Robot::Robot</definition>
        <argsstring>(ADDR_TYPEDEF addr, Environment *en)</argsstring>
        <name>Robot</name>
        <qualifiedname>Robot::Robot</qualifiedname>
        <param>
          <type><ref refid="__common_8h_1ace694e2135c52226445db7abe85136b5" kindref="member">ADDR_TYPEDEF</ref></type>
          <declname>addr</declname>
        </param>
        <param>
          <type><ref refid="class_environment" kindref="compound">Environment</ref> *</type>
          <declname>en</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Robot.h" line="14" column="14" bodyfile="src/Robot.cpp" bodystart="3" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="class_robot_1a9f9a68752b98bc25226f82414fc175b9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Robot::listenTo</definition>
        <argsstring>(CHANNEL_INDEX_TYPEDEF channelIndex)</argsstring>
        <name>listenTo</name>
        <qualifiedname>Robot::listenTo</qualifiedname>
        <param>
          <type><ref refid="__common_8h_1a9635220f023976d87c59d9234b98f11f" kindref="member">CHANNEL_INDEX_TYPEDEF</ref></type>
          <declname>channelIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Robot.h" line="15" column="17" bodyfile="include/Robot.h" bodystart="15" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="class_robot_1a2760106a796c73b8e228858a459a35ae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Robot::log</definition>
        <argsstring>(const std::string &amp;log)</argsstring>
        <name>log</name>
        <qualifiedname>Robot::log</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>log</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Robot.h" line="19" column="17" bodyfile="include/Robot.h" bodystart="19" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="class_robot_1a3c20a96cd27f849c2f9de4732529a07f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Robot::gotoPosition</definition>
        <argsstring>(Position pos)</argsstring>
        <name>gotoPosition</name>
        <qualifiedname>Robot::gotoPosition</qualifiedname>
        <param>
          <type><ref refid="struct_position" kindref="compound">Position</ref></type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Robot.h" line="20" column="17" bodyfile="include/Robot.h" bodystart="20" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="class_robot_1a121dc12f848b37b9d446ec5a981b7428" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Robot::chagingUp</definition>
        <argsstring>()</argsstring>
        <name>chagingUp</name>
        <qualifiedname>Robot::chagingUp</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Robot.h" line="23" column="17" bodyfile="include/Robot.h" bodystart="23" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="class_robot_1a5e30da99242282a7b48a3ee2717d440b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="__common_8h_1ac90ccc37e41cdc297ad40132bdde4bdf" kindref="member">POWER_TYPEDEF</ref></type>
        <definition>POWER_TYPEDEF Robot::getPower</definition>
        <argsstring>() const</argsstring>
        <name>getPower</name>
        <qualifiedname>Robot::getPower</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Robot.h" line="24" column="26" bodyfile="include/Robot.h" bodystart="24" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="class_robot_1acd8deb1e7ac139808adf1a451e8129ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Robot::login</definition>
        <argsstring>(std::string loginKey)</argsstring>
        <name>login</name>
        <qualifiedname>Robot::login</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>loginKey</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Robot.h" line="26" column="10" bodyfile="src/Robot.cpp" bodystart="36" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="class_robot_1ac1ec0b09fbaf4e34963210f85f94e70e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Robot::needCharge</definition>
        <argsstring>()</argsstring>
        <name>needCharge</name>
        <qualifiedname>Robot::needCharge</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Robot.h" line="27" column="10" bodyfile="src/Robot.cpp" bodystart="47" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="class_robot_1a226257e1f1a395ff3b679a94ff0c617a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Robot::sendToServer</definition>
        <argsstring>(MsgType type, const std::string payload)</argsstring>
        <name>sendToServer</name>
        <qualifiedname>Robot::sendToServer</qualifiedname>
        <param>
          <type><ref refid="__common_8h_1a4d47dc9870566f2f294eaab1426094a2" kindref="member">MsgType</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>const std::string</type>
          <declname>payload</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Robot.h" line="28" column="17" bodyfile="include/Robot.h" bodystart="28" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="class_robot_1a68d609ae8ef5f328eb06e00f8e6aee5a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Robot::sendToServer</definition>
        <argsstring>(MsgType type)</argsstring>
        <name>sendToServer</name>
        <qualifiedname>Robot::sendToServer</qualifiedname>
        <param>
          <type><ref refid="__common_8h_1a4d47dc9870566f2f294eaab1426094a2" kindref="member">MsgType</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Robot.h" line="31" column="17" bodyfile="include/Robot.h" bodystart="31" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="class_robot_1a516db19bce370845c445bed8a6af19e0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Robot::sendToServer</definition>
        <argsstring>(MsgType type, const std::string payload, std::function&lt; void(ADDR_TYPEDEF, const std::string &amp;)&gt; callback)</argsstring>
        <name>sendToServer</name>
        <qualifiedname>Robot::sendToServer</qualifiedname>
        <param>
          <type><ref refid="__common_8h_1a4d47dc9870566f2f294eaab1426094a2" kindref="member">MsgType</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>const std::string</type>
          <declname>payload</declname>
        </param>
        <param>
          <type>std::function&lt; void(<ref refid="__common_8h_1ace694e2135c52226445db7abe85136b5" kindref="member">ADDR_TYPEDEF</ref>, const std::string &amp;)&gt;</type>
          <declname>callback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Robot.h" line="34" column="17" bodyfile="include/Robot.h" bodystart="34" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="class_robot_1a2bd9a5a79fd59b6772e6dbb6582d26ef" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Robot::sendToServer</definition>
        <argsstring>(MsgType type, std::function&lt; void(ADDR_TYPEDEF, const std::string &amp;)&gt; callback)</argsstring>
        <name>sendToServer</name>
        <qualifiedname>Robot::sendToServer</qualifiedname>
        <param>
          <type><ref refid="__common_8h_1a4d47dc9870566f2f294eaab1426094a2" kindref="member">MsgType</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>std::function&lt; void(<ref refid="__common_8h_1ace694e2135c52226445db7abe85136b5" kindref="member">ADDR_TYPEDEF</ref>, const std::string &amp;)&gt;</type>
          <declname>callback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Robot.h" line="37" column="17" bodyfile="include/Robot.h" bodystart="37" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="class_robot_1a88731bc2d8090b7574ebe64e2452a9f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Robot::sendHandshakeToStation</definition>
        <argsstring>(std::string handShakey, ADDR_TYPEDEF stationAddr, CHANNEL_INDEX_TYPEDEF channelIndex)</argsstring>
        <name>sendHandshakeToStation</name>
        <qualifiedname>Robot::sendHandshakeToStation</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>handShakey</declname>
        </param>
        <param>
          <type><ref refid="__common_8h_1ace694e2135c52226445db7abe85136b5" kindref="member">ADDR_TYPEDEF</ref></type>
          <declname>stationAddr</declname>
        </param>
        <param>
          <type><ref refid="__common_8h_1a9635220f023976d87c59d9234b98f11f" kindref="member">CHANNEL_INDEX_TYPEDEF</ref></type>
          <declname>channelIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Robot.h" line="41" column="10" bodyfile="src/Robot.cpp" bodystart="76" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="class_robot_1a90a91424068bd658ed431162d929049c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Robot::keepAliveWhenCharging</definition>
        <argsstring>()</argsstring>
        <name>keepAliveWhenCharging</name>
        <qualifiedname>Robot::keepAliveWhenCharging</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Robot.h" line="42" column="17" bodyfile="src/Robot.cpp" bodystart="97" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="class_robot_1ac437a1d7ac2c8ec686ab0df30fcf95e5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Robot::sendPowerFinish</definition>
        <argsstring>(ADDR_TYPEDEF stationAddr)</argsstring>
        <name>sendPowerFinish</name>
        <qualifiedname>Robot::sendPowerFinish</qualifiedname>
        <param>
          <type><ref refid="__common_8h_1ace694e2135c52226445db7abe85136b5" kindref="member">ADDR_TYPEDEF</ref></type>
          <declname>stationAddr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Robot.h" line="43" column="17" bodyfile="src/Robot.cpp" bodystart="106" bodyend="113"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>Device</label>
        <link refid="class_device"/>
      </node>
      <node id="2">
        <label>ProtocolDevice</label>
        <link refid="class_protocol_device"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>Robot</label>
        <link refid="class_robot"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>Device</label>
        <link refid="class_device"/>
      </node>
      <node id="2">
        <label>ProtocolDevice</label>
        <link refid="class_protocol_device"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>Robot</label>
        <link refid="class_robot"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/Robot.h" line="6" column="1" bodyfile="include/Robot.h" bodystart="6" bodyend="44"/>
    <listofallmembers>
      <member refid="class_robot_1a121dc12f848b37b9d446ec5a981b7428" prot="public" virt="non-virtual"><scope>Robot</scope><name>chagingUp</name></member>
      <member refid="class_robot_1a525741287f163490ba22534f12166c69" prot="private" virt="non-virtual"><scope>Robot</scope><name>chargingStationAddr</name></member>
      <member refid="class_device_1a534415da35664d5a9ff6fcf043029e84" prot="public" virt="non-virtual"><scope>Robot</scope><name>Device</name></member>
      <member refid="class_device_1a25112960d14acd64e7f1b8388af1e132" prot="public" virt="non-virtual"><scope>Robot</scope><name>error</name></member>
      <member refid="class_protocol_device_1ad4878a8e00eb38999144ea75b28b5015" prot="public" virt="non-virtual"><scope>Robot</scope><name>formatKeyStr</name></member>
      <member refid="class_device_1a9e924a4fac8366d76f2aa661bf8d3dac" prot="public" virt="non-virtual"><scope>Robot</scope><name>getAddr</name></member>
      <member refid="class_robot_1a5e30da99242282a7b48a3ee2717d440b" prot="public" virt="non-virtual"><scope>Robot</scope><name>getPower</name></member>
      <member refid="class_robot_1a3c20a96cd27f849c2f9de4732529a07f" prot="public" virt="non-virtual"><scope>Robot</scope><name>gotoPosition</name></member>
      <member refid="class_protocol_device_1a7716806817011df76d855f30cf3f2b23" prot="public" virt="non-virtual"><scope>Robot</scope><name>hexStringToMsgType</name></member>
      <member refid="class_robot_1a90a91424068bd658ed431162d929049c" prot="public" virt="non-virtual"><scope>Robot</scope><name>keepAliveWhenCharging</name></member>
      <member refid="class_robot_1a9f9a68752b98bc25226f82414fc175b9" prot="public" virt="non-virtual"><scope>Robot</scope><name>listenTo</name></member>
      <member refid="class_robot_1a2760106a796c73b8e228858a459a35ae" prot="public" virt="non-virtual"><scope>Robot</scope><name>log</name></member>
      <member refid="class_protocol_device_1a54848a94b7290bc42b846be899758e41" prot="public" virt="non-virtual" ambiguityscope="ProtocolDevice::"><scope>Robot</scope><name>log</name></member>
      <member refid="class_robot_1acd8deb1e7ac139808adf1a451e8129ac" prot="public" virt="non-virtual"><scope>Robot</scope><name>login</name></member>
      <member refid="class_robot_1a0119d7e9803d19e659f0c5e60fbb47ce" prot="private" virt="non-virtual"><scope>Robot</scope><name>loginSuccess</name></member>
      <member refid="class_protocol_device_1ab499901dbec84769ab86d6eb99d418ea" prot="public" virt="non-virtual"><scope>Robot</scope><name>msgHandler</name></member>
      <member refid="class_protocol_device_1aa0da4767b6297edc518c84b9cc296e93" prot="public" virt="non-virtual"><scope>Robot</scope><name>MsgTypeToHexString</name></member>
      <member refid="class_robot_1ac1ec0b09fbaf4e34963210f85f94e70e" prot="public" virt="non-virtual"><scope>Robot</scope><name>needCharge</name></member>
      <member refid="class_robot_1a83ba4297407dba276a37e9036cb72d84" prot="private" virt="non-virtual"><scope>Robot</scope><name>needCharging</name></member>
      <member refid="class_protocol_device_1a1ac42bba860be61ca6867ff7f9978b1a" prot="public" virt="non-virtual"><scope>Robot</scope><name>on</name></member>
      <member refid="class_protocol_device_1a201e9643176a39facc54e6e00bc8cd44" prot="public" virt="non-virtual"><scope>Robot</scope><name>once</name></member>
      <member refid="class_robot_1a95d34c931fd70353dabb301045cb8cd8" prot="private" virt="non-virtual"><scope>Robot</scope><name>power</name></member>
      <member refid="class_protocol_device_1a86fe6dd895e9d31cb02f25aedeec4517" prot="public" virt="non-virtual"><scope>Robot</scope><name>ProtocolDevice</name></member>
      <member refid="class_protocol_device_1a1f54fd7c5d99d865446e670080838fba" prot="public" virt="virtual"><scope>Robot</scope><name>recieve</name></member>
      <member refid="class_robot_1a5b96001154c6eeca6c7e546da8d1a009" prot="public" virt="non-virtual"><scope>Robot</scope><name>Robot</name></member>
      <member refid="class_protocol_device_1ac8e76689b597199de9732533a9e18f0d" prot="public" virt="non-virtual"><scope>Robot</scope><name>send</name></member>
      <member refid="class_protocol_device_1af611022232cd75f5a381a3249680c073" prot="public" virt="non-virtual"><scope>Robot</scope><name>send</name></member>
      <member refid="class_protocol_device_1ae7a3396842456d09c8d99adcbbb8b33f" prot="public" virt="non-virtual"><scope>Robot</scope><name>send</name></member>
      <member refid="class_protocol_device_1a6b00e2e8334f0184b9930a388de9ce0e" prot="public" virt="non-virtual"><scope>Robot</scope><name>send</name></member>
      <member refid="class_device_1a00e1d363811ad74a7267211440045246" prot="protected" virt="non-virtual" ambiguityscope="Device::"><scope>Robot</scope><name>send</name></member>
      <member refid="class_robot_1a88731bc2d8090b7574ebe64e2452a9f6" prot="public" virt="non-virtual"><scope>Robot</scope><name>sendHandshakeToStation</name></member>
      <member refid="class_robot_1ac437a1d7ac2c8ec686ab0df30fcf95e5" prot="public" virt="non-virtual"><scope>Robot</scope><name>sendPowerFinish</name></member>
      <member refid="class_robot_1a226257e1f1a395ff3b679a94ff0c617a" prot="public" virt="non-virtual"><scope>Robot</scope><name>sendToServer</name></member>
      <member refid="class_robot_1a68d609ae8ef5f328eb06e00f8e6aee5a" prot="public" virt="non-virtual"><scope>Robot</scope><name>sendToServer</name></member>
      <member refid="class_robot_1a516db19bce370845c445bed8a6af19e0" prot="public" virt="non-virtual"><scope>Robot</scope><name>sendToServer</name></member>
      <member refid="class_robot_1a2bd9a5a79fd59b6772e6dbb6582d26ef" prot="public" virt="non-virtual"><scope>Robot</scope><name>sendToServer</name></member>
      <member refid="class_device_1aa77235051cbb8db5bdeb55acbf92c439" prot="public" virt="non-virtual"><scope>Robot</scope><name>setBusy</name></member>
      <member refid="class_device_1a10a65f15883b944469d65cb775d35a7e" prot="public" virt="non-virtual"><scope>Robot</scope><name>setLogEnable</name></member>
      <member refid="class_device_1a2c7928822cfb7b6f85980a51b8f94b12" prot="public" virt="non-virtual"><scope>Robot</scope><name>setOnBusyChanged</name></member>
      <member refid="class_device_1aed2179d42305c3053d3f99bfe1af92b4" prot="public" virt="non-virtual"><scope>Robot</scope><name>setOnWaitingChanged</name></member>
      <member refid="class_device_1a68a3860b803cff4e2c46fbdda9577428" prot="public" virt="non-virtual"><scope>Robot</scope><name>setWaiting</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
