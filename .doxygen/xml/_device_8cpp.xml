<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="_device_8cpp" kind="file" language="C++">
    <compoundname>Device.cpp</compoundname>
    <includes refid="__common_8h" local="yes">../include/_common.h</includes>
    <incdepgraph>
      <node id="17">
        <label>Channel.h</label>
        <link refid="_channel_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>Device.h</label>
        <link refid="_device_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>Environment.h</label>
        <link refid="_environment_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>Message.h</label>
        <link refid="_message_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>ProtocolDevice.h</label>
        <link refid="_protocol_device_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>Robot.h</label>
        <link refid="_robot_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>Server.h</label>
        <link refid="_server_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>SimEvent.h</label>
        <link refid="_sim_event_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>Station.h</label>
        <link refid="_station_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>../include/_common.h</label>
        <link refid="__common_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/Device.cpp</label>
        <link refid="_device_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>cstdint</label>
      </node>
      <node id="12">
        <label>format</label>
      </node>
      <node id="6">
        <label>functional</label>
      </node>
      <node id="11">
        <label>iomanip</label>
      </node>
      <node id="9">
        <label>iostream</label>
      </node>
      <node id="13">
        <label>list</label>
      </node>
      <node id="5">
        <label>queue</label>
      </node>
      <node id="3">
        <label>random</label>
      </node>
      <node id="14">
        <label>sstream</label>
      </node>
      <node id="10">
        <label>string</label>
      </node>
      <node id="8">
        <label>unordered_map</label>
      </node>
      <node id="7">
        <label>vector</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="__common_8h" kindref="compound">../include/_common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"><ref refid="class_device_1a534415da35664d5a9ff6fcf043029e84" kindref="member">Device::Device</ref>(<ref refid="__common_8h_1ace694e2135c52226445db7abe85136b5" kindref="member">ADDR_TYPEDEF</ref><sp/>addr,<sp/><ref refid="class_environment" kindref="compound">Environment</ref>*<sp/>en)<sp/>:<sp/></highlight></codeline>
<codeline lineno="4"><highlight class="normal"><sp/><sp/><sp/><sp/>txDelay(<ref refid="__common_8h_1af0503195ff2120ada205603689973056" kindref="member">TX_DELAY_BASE</ref>),<sp/></highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/><sp/><sp/>addr(addr),<sp/></highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/>en(en),<sp/></highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/>busy(false),</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/>waiting(false),</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/>listeningIndex(<ref refid="__common_8h_1a8b1944035d810f3f3cf017c396d47f36" kindref="member">MAIN_CHANNEL</ref>),</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>onBusyChanged(nullptr),</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>onWaitingChanged(nullptr),</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>logEnable(false)</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this-&gt;log(&quot;listening<sp/>to<sp/>channel[0]&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>en-&gt;<ref refid="class_environment_1a1f14697142a2a1997451806c42b6c91b" kindref="member">getChannels</ref>()[<ref refid="__common_8h_1a8b1944035d810f3f3cf017c396d47f36" kindref="member">MAIN_CHANNEL</ref>].addListener(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>en-&gt;<ref refid="class_environment_1ac1a4674ff36b23837ff896ff444acaed" kindref="member">addDevice</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_device_1aa77235051cbb8db5bdeb55acbf92c439" kindref="member">Device::setBusy</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(this-&gt;busy<sp/>!=<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;busy<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(onBusyChanged)<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>onBusyChanged(value);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="26"><highlight class="normal">}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_device_1a68a3860b803cff4e2c46fbdda9577428" kindref="member">Device::setWaiting</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(this-&gt;waiting<sp/>!=<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;waiting<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(onWaitingChanged)<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>onWaitingChanged(value);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_device_1adb6173df7a804fef6dc7a8254927defa" kindref="member">Device::recieve</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_message" kindref="compound">Message</ref>*<sp/>msg,<sp/><ref refid="__common_8h_1a9635220f023976d87c59d9234b98f11f" kindref="member">CHANNEL_INDEX_TYPEDEF</ref><sp/>channelIndex)<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_device_1a02a4dcfb2be69394026033da9c0e0614" kindref="member">log</ref>(</highlight><highlight class="stringliteral">&quot;rx[&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(channelIndex)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;]<sp/>&lt;-<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>msg-&gt;<ref refid="class_message_1a3c356102b83f3a77406a8d39bdeb0b18" kindref="member">payload</ref>);</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_device_1a996cfa9dad7ff28bcd6ca50ce41b1f53" kindref="member">Device::listenTo</ref>(<ref refid="__common_8h_1a9635220f023976d87c59d9234b98f11f" kindref="member">CHANNEL_INDEX_TYPEDEF</ref><sp/>channelIndex)<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(channelIndex<sp/>&gt;=<sp/><ref refid="__common_8h_1a2240564d76b4fbea174a855d04dd3193" kindref="member">CHANNEL_COUNTS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_device_1a25112960d14acd64e7f1b8388af1e132" kindref="member">error</ref>(</highlight><highlight class="stringliteral">&quot;channelIndex<sp/>too<sp/>large&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(channelIndex<sp/>!=<sp/>this-&gt;listeningIndex)<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;en-&gt;<ref refid="class_environment_1a1f14697142a2a1997451806c42b6c91b" kindref="member">getChannels</ref>()[this-&gt;listeningIndex].<ref refid="class_channel_1ac80e93a8ed9f15eda394225d4510c61d" kindref="member">removeListener</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;listeningIndex<sp/>=<sp/>channelIndex;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;en-&gt;<ref refid="class_environment_1a1f14697142a2a1997451806c42b6c91b" kindref="member">getChannels</ref>()[channelIndex].<ref refid="class_channel_1ab57ee24162df76536876d508c2c4e552" kindref="member">addListener</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this-&gt;log(&quot;listening<sp/>to<sp/>channel[&quot;<sp/>+<sp/>std::to_string(channelIndex)<sp/>+<sp/>&quot;]&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Device::trueSend(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>payload,<sp/><ref refid="__common_8h_1a9635220f023976d87c59d9234b98f11f" kindref="member">CHANNEL_INDEX_TYPEDEF</ref><sp/>channelIndex,<sp/><ref refid="__common_8h_1ace694e2135c52226445db7abe85136b5" kindref="member">ADDR_TYPEDEF</ref><sp/>target)<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(channelIndex<sp/>&gt;=<sp/><ref refid="__common_8h_1a2240564d76b4fbea174a855d04dd3193" kindref="member">CHANNEL_COUNTS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_device_1a25112960d14acd64e7f1b8388af1e132" kindref="member">error</ref>(</highlight><highlight class="stringliteral">&quot;channelIndex<sp/>too<sp/>large&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(this-&gt;en-&gt;<ref refid="class_environment_1a1f14697142a2a1997451806c42b6c91b" kindref="member">getChannels</ref>()[channelIndex].<ref refid="class_channel_1a5a1f020188da7b6abc82a588a16802fc" kindref="member">isBusy</ref>())<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_device_1a68a3860b803cff4e2c46fbdda9577428" kindref="member">setWaiting</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;en-&gt;<ref refid="class_environment_1a3cbe818a3649fe4f67fff09eda16acdc" kindref="member">delayEvent</ref>(this-&gt;txDelay,<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>payload,<sp/>channelIndex,<sp/>target]()<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;trueSend(payload,<sp/>channelIndex,<sp/>target);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;txDelay<sp/>+=<sp/><ref refid="__common_8h_1af0503195ff2120ada205603689973056" kindref="member">TX_DELAY_BASE</ref>;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(this-&gt;txDelay<sp/>!=<sp/><ref refid="__common_8h_1af0503195ff2120ada205603689973056" kindref="member">TX_DELAY_BASE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;txDelay<sp/>=<sp/><ref refid="__common_8h_1af0503195ff2120ada205603689973056" kindref="member">TX_DELAY_BASE</ref>;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_device_1aa77235051cbb8db5bdeb55acbf92c439" kindref="member">setBusy</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="__common_8h_1a3aace27b10c3e64c3fdccbe040b919f2" kindref="member">TIME_TYPEDEF</ref><sp/>sendingTime<sp/>=<sp/>payload.length()<sp/>+<sp/>16;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;en-&gt;<ref refid="class_environment_1ab2ffb01d897494de982ba47995664a66" kindref="member">broadcast</ref>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_message" kindref="compound">Message</ref>(this-&gt;addr,<sp/>target,<sp/>payload),<sp/>channelIndex,<sp/>sendingTime);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>en-&gt;<ref refid="class_environment_1a3cbe818a3649fe4f67fff09eda16acdc" kindref="member">delayEvent</ref>(sendingTime,<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">](){</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_device_1aa77235051cbb8db5bdeb55acbf92c439" kindref="member">setBusy</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_device_1a68a3860b803cff4e2c46fbdda9577428" kindref="member">setWaiting</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>send<sp/>next</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;processQueue();</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Device::enqueue(std::string<sp/>payload,<sp/><ref refid="__common_8h_1a9635220f023976d87c59d9234b98f11f" kindref="member">CHANNEL_INDEX_TYPEDEF</ref><sp/>channelIndex,<sp/><ref refid="__common_8h_1ace694e2135c52226445db7abe85136b5" kindref="member">ADDR_TYPEDEF</ref><sp/>target)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;msgQueue.emplace(payload,<sp/>channelIndex,<sp/>target);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>processQueue();</highlight></codeline>
<codeline lineno="82"><highlight class="normal">}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Device::processQueue()<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(msgQueue.empty())<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>[payload,<sp/>channelIndex,<sp/>target]<sp/>=<sp/>this-&gt;msgQueue.front();</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;msgQueue.pop();</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;trueSend(payload,<sp/>channelIndex,<sp/>target);</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_device_1a02a4dcfb2be69394026033da9c0e0614" kindref="member">Device::log</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>log)<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!this-&gt;logEnable)<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;[&quot;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::setw(<ref refid="__common_8h_1aeafbb61911fb29d2d5879294cfca18d2" kindref="member">TIME_FORMAT_LENGTH</ref>)<sp/>&lt;&lt;<sp/>std::setfill(</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>this-&gt;en-&gt;<ref refid="class_environment_1a27723957d844c1823b3582f106fcd47e" kindref="member">getTime</ref>()</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;][D][&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="class_message_1acef8afa3edec9aeb7a0b6db49a982b09" kindref="member">Message::addrToHexString</ref>(this-&gt;addr)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]:&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="class_device_1a02a4dcfb2be69394026033da9c0e0614" kindref="member">log</ref></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/Device.cpp"/>
  </compounddef>
</doxygen>
